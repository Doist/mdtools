// Code generated by github.com/artyom/usagegen; DO NOT EDIT.

package main

import (
	"flag"
	"fmt"
	"os"
	"path/filepath"
)

func init() {
	const usage = "Command mdmovearound helps when reorganizing set of cross-referencing markdown\n(.md) files. It should be run once before moving/renaming files, and then run\nagain to update broken cross-links.\n\nIt works by first recursively traversing directory making list of all non-hidden\nfiles along with hashes of their contents. Once such list is built and saved, on\nnext call it loads list from previous run, builds list once again for current\ndirectory state, then checks each markdown file (.md) from this new list, trying\nto reconstruct broken links by finding file renames via old and new hash lists.\nUpon successful completion it updates saved list with current state.\n\nBecause it works by figuring out renames looking at file content hashes, it only\nworks for files that were NOT modified between calls to this program.\n\nSince it may potentially update multiple files, the whole operation is not\natomic, so it is advisable to only run it over files versioned by VCS, so that\nin case of any errors original files can be easily restored.\n\nCurrently only inline links like [link](dst.md) are supported; links like\n[link][id] are NOT supported. The reason for this is that links are updated by\nsubstring replacements inside text, this may lead to some invalid replacements,\nand handling only inline links reduces risk of invalid replacements. Please\ncheck results before committing them.\n"
	flag.Usage = func() {
		fmt.Fprintln(flag.CommandLine.Output(), usage)
		fmt.Fprintf(flag.CommandLine.Output(), "Usage of %s:\n", filepath.Base(os.Args[0]))
		flag.PrintDefaults()
	}
}
